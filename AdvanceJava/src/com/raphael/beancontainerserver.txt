java程序(一系列语法规则与规范以及使用提供的api声明)
->
class字节码+jar(class实现,这里和上面的api对应) (JDK中的编辑/编译/调试工具等)
->
JRE [*JVM(字节码转换成机器码)+运行时类库支持] (无论什么服务器都内置了某个版本的jdk)
->
机器


服务器提供的是:1.运行环境 2.服务(server是j2ee"规范"的"实现")

j2ee apis:规范和声明(调用服务)
server   :服务具体实现


程序(自己的代码+提供的api)->字节码(自己的class+提供的class)->JVM(自己的class+提供的class+运行时的class)->机器

组件和容器都是class
都在JRE上?

jboss，weblogic，websphere都是j2ee标准的一个"实现"
！！！J2EE的规范理解成是一系列的接口
！！！我们只要使用接口,不需要关心具体实现.
！！！服务器实现了接口(标准)
例如:
Tomcat实现了servlet标准
Tomcat实现了JSP标准

*******************************************************
组件:
    实现应用系统的功能(使用容器声明的服务即一系列接口)
*******************************************************

*******************************************************
容器:
    1.提供组件运行环境
    2.控制组件生命周期
    3.容器提供服务(事务|目录|...)              (声明服务)
服务器:
    1.提供容器环境
    2.实现规范*                              (实现服务)
*******************************************************